name: CI

on:
  push:
    branches: [master]

jobs:
  build_and_publish_image:
    name: Build and Publish Image
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@master

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Login to registry
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        if: success()
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          push: true
          tags: appditto/sc-mixpanel:${{ env.BRANCH_NAME }}-${{ env.GITHUB_RUN_ID }}

  deploy_image:
    name: Deploy Image
    needs: build_and_publish_image
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_ID: ${{ github.run_id }}
    steps:
      - uses: actions/checkout@master
      - uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.5.4"
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Set image
        working-directory: ./kubernetes
        run: |
          kustomize edit set image replaceme=appditto/sc-mixpanel:${{ env.BRANCH_NAME }}-${{ env.GITHUB_RUN_ID }}
          kustomize build . > sc-mixpanel-k.yaml
      - name: Deploy image to k8s cluster
        uses: bbedward/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f ./kubernetes/sc-mixpanel-k.yaml
